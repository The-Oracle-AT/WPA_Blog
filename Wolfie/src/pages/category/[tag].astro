---
import { Image } from 'astro:assets';
import { getCollection } from 'astro:content';
import BaseHead from '../../components/BaseHead.astro';
import Footer from '../../components/Footer.astro';
import FormattedDate from '../../components/FormattedDate.astro';
import Header from '../../components/Header.astro';
import { SITE_DESCRIPTION, SITE_TITLE } from '../../consts';



export async function getStaticPaths(): Promise<any> {
    const allPosts = await getCollection('blog');
	if (allPosts) {
		const uniqueTags = [ ...new Set(allPosts.map(post => post.data.category).flat()) ];
    
		return uniqueTags.map((tag: any )=> {
			
			const filteredPosts = allPosts.filter(post => post.data.category.includes(tag));
			return {
				params : { tag },
				props : { posts : filteredPosts }
			}
		});
	} else {
		return {
			params : { tag : 'NO category' },
			props : { posts : [] }
		}
	}

    
}

export const prerender = true

const { posts } = Astro.props as { posts: any[] };
const category = (Astro.url.pathname.split('/').pop())?.replace(/%20/g , ' '); // Get the last part of the URL and replace %20 with a space

---
<!doctype html>
<html lang="en">
	<head>
		<BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
		<style>
			main {
				width: 960px;
			}
			ul {
				display: flex;
				flex-wrap: wrap;
				gap: 2rem;
				list-style-type: none;
				margin: 0;
				padding: 0;
			}
			ul li {
				width: calc(50% - 1rem);
			}
			ul li * {
				text-decoration: none;
				transition: 0.2s ease;
			}

			ul li img {
				margin-bottom: 0.5rem;
				border-radius: 12px;
			}
			ul li a {
				display: block;
			}
			.title {
				margin: 0;
			
				line-height: 1;
			}
			
			
			@media (max-width: 720px) {
				ul {
					gap: 0.5em;
				}
				ul li {
					width: 100%;
					text-align: center;
				}
				ul li:first-child {
					margin-bottom: 0;
				}
				ul li:first-child .title {
					font-size: 1.563em;
				}
			}
		</style>
	</head>
	<body>
		<Header />
		<main style=" display: flex; flex-direction: column;">
			<section>
				<h3>{category} category</h3> 
				<hr/>
			</section>
			<section>
				<ul>
					{
						posts && posts.map((post) => (
							<li>
								<a href={`/blog/${post.slug}/`}>
									
										<Image width={720} height={360} src={post.data.heroImage} alt="Lesson card" loading={"lazy"} />
									
									<h4 class="title">{post.data.title}</h4>
									<p class="date">
										<FormattedDate date={post.data.pubDate} />
									</p>
								</a>
							</li>
						))
					}
				</ul>
			</section>
		</main>
		<Footer />
	</body>
</html>