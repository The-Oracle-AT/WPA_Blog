---
import { Image } from 'astro:assets';
import { getCollection } from 'astro:content';
import BaseHead from '../../components/BaseHead.astro';
import Footer from '../../components/Footer.astro';
import Header from '../../components/Header.astro';

import { SITE_DESCRIPTION, SITE_TITLE } from '../../consts';
import "../../styles/global.scss";

import Album from '../../components/index/Album.svelte';
import AlbumContainer from '../../components/index/AlbumContainer.svelte';
import Card from '../../components/svelte/Card.svelte';
import Carousel from '../../components/svelte/Carousel.svelte';

const posts = (await getCollection('blog')).sort(
	(a, b) => a.data.pubDate.valueOf() - b.data.pubDate.valueOf()
).reverse();
const categories = posts.map((post:any) => post.data.category);
const uniqueCategories = [...new Set(categories)]; // remove duplicates
const categorizedPosts = uniqueCategories.map((category:any) => {
     return {
         category: category,
         posts: posts.filter((post:any) => post.data.category === category),
         name: category.charAt(0).toUpperCase() + category.slice(1),
     }
 });

 
---

<!doctype html>
<html lang="en">
	<head>
	<BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
	<style lang="scss">

	section {
		margin-bottom: 2rem;
		z-index: 1;
		max-height: fit-content;
				
	}
	
	.filter a {
		text-decoration: none;
		color: inherit;
		display: flex;
		align-self: end;	
	}
	.filter a:hover {
		text-decoration: underline;
		color: var(--link-hover);
	}
			
	.filter {
		display: flex;
		flex-direction: column;
	}	
		</style>
	</head>
	<body>
		<Header />
		<main>
			
			<div class="filter">
				<!-- <Search /> -->
				
				<a href="/page/tags/">
				<svg width="25px" height="25px" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
					<path d="M4 7H20" stroke="#000000" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="filter-p"/>
					<path d="M7 12L17 12" stroke="#000000" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="filter-p"/>
					<path d="M11 17H13" stroke="#000000" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="filter-p"/>
				</svg>
					Filter posts<a/>
			</div><br/>
			
			<div id="courses">
				<div>
					<section id="course_section" class="carousel_wrapper">
						<h2>Latest Posts</h2>
						
						<Carousel client:load>
							{
								posts.map((post:any) => (
									<Card post={post} transition:name={`${post.data.title}`}/>
								))
							}

						</Carousel>
					</section>
				</div>
			{ categorizedPosts.length > 0 ? (
				<AlbumContainer>
					{categorizedPosts.map((category:any, index) => (
						<Album
						albumName={category.name}
						linkToPlaylist={`/page/${category.name}/1`}
						numPosts={category.posts.length}>		
							<Image 
								src={`/${category.name}-category-img.png`} 
								width={720} height={360} 
								alt={`${category.name}`} 
								class={'category-img'}
								loading={"lazy"}
								transition:name={`/${category.name}-category-img.png`}/>
						</Album>	
						))}

				</AlbumContainer>
			
				) : <p>No categories found</p> }
			</div>
		</main>
		<Footer />
	</body>
</html>


<style lang="scss">
	.categories {
		display: grid;
		width: 100%;
		grid-template-columns: 1fr 1fr;
		gap: 1rem;

		
		.carousel_wrapper {
			display: flex;
			flex-direction: column;
			border-radius: 1rem;
			background: inherit;
			box-shadow: 0px 0px 4px rgba(0, 0, 0, 1);
			background: rgba(#f1f1f1, 1);
			transition: all .3s;
			&:hover {
				box-shadow: 0px 0px 10px rgba(0, 0, 0, 1);
				transform: scale(1.05);
			}
						
		}
	}
	.category-name {
		color: inherit; 
		text-decoration: none;
		&:hover {
			color: var(--link-hover);
		}
	}
	@media screen and (max-width: 600px) {
		.categories {
			display: flex;
			flex-direction: column;
		}
	}
	
</style>




