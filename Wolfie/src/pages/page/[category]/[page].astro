---
import type { GetStaticPaths } from "astro";
import { Image } from 'astro:assets';
import { getCollection } from 'astro:content';
import BaseHead from '../../../components/BaseHead.astro';
import Footer from '../../../components/Footer.astro';
import Header from '../../../components/Header.astro';
import Pagination from '../../../components/Pagination.svelte';
import Playlist from "../../../components/index/Playlist.astro";
import PlaylistItem from "../../../components/index/PlaylistItem.astro";
import { SITE_DESCRIPTION, SITE_TITLE } from '../../../consts';



export const getStaticPaths = (async ({paginate}) => {
  const allPosts = await getCollection('blog');
  const uniqueCategories = [ ...new Set(allPosts.map(post => post.data.category).flat()) ];
  return uniqueCategories.flatMap((category) => {
	const filteredPosts = allPosts.filter(post => post.data.category.includes(category));
	return paginate( filteredPosts, { 
		params: { category }, 
		pageSize: 8});
  })
	
}) satisfies GetStaticPaths;

export const prerender = true

const { page } = Astro.props;
const params = Astro.params;

// const category = (Astro.url.pathname.split('/').pop())?.replace(/%20/g , ' '); // Get the last part of the URL and replace %20 with a space

---
<!doctype html>
<html lang="en">
	<head>
		<BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
		<style lang="scss">
			main {
				width: 960px;
			}
			ul {
				display: flex;
				flex-direction: column;
				gap: 2rem;
				list-style-type: none;
				margin: 0;
				padding: 0;
			}
			ul li {
				width: 100%;
				border-bottom: 5px yellow;
			}
			ul li * {
				text-decoration: none;
				transition: 0.2s ease;
				
			}

			ul li img {
				margin-bottom: 0.5rem;
				border-radius: 12px;
			}
			ul li a {
				display: block;
			}
			.title {
				margin: 0;
			
				line-height: 1;
			}
			
			
			@media (max-width: 720px) {
				ul {
					gap: 0.5em;
					li {
						width: 100%;
						text-align: center;


						&:first-child {
							margin-bottom: 0;
							.title {
								font-size: 1.563em;
							}
						}
						h3 {
							font-size: large;
						}
					}
				}
			}
 	
			
		</style>
	</head>
	<body>
		<Header />
		<main style="display: flex; flex-direction: column;">
			<section style="margin-bottom: 1rem;">
				<Image src={`/${params.category}-category-img.png`} width={720} height={360} alt={`${params.category}`} class={'category-img'}/>
			</section>
			<section>
				<Playlist>
					{
						page && page.data.map((post, index) => (
							<div class="item-of-playlist">
								

								
									<PlaylistItem
									title = {post.data.title}
									urlParam = {`/page/category/${post.slug}/`}
									postDate={ post.data.pubDate}
									description={post.data.description}
									cardHeight={"15rem"}
									postTags={post.data.tags}
									/>
								

								
								
							</div>
						))
					}
				</Playlist>
				<Pagination
					categoryURL={""}
					prevousPageURL={page.url.prev ? page.url.prev : null}
					nextPageURL={page.url.next ? page.url.next : null}
				client:only/>
				
			</section>
		</main>
		<Footer />
	</body>
</html>
<style lang="scss">
	section {
		&:has(.category-img){
			display: flex;
			justify-content: center;
			.category-img {
				width: 100%;
			}
		}
	}
	.item-of-playlist {
		background: #f1f1f1;
		border-radius: 2rem;
		height: fit-content;
		
	}
	.dark {
		.item-of-playlist {
			background: rgba(black, 1);
			
		}
	}


</style>