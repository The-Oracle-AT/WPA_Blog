---
import "../../styles/global.scss"
import FormattedDate from "../FormattedDate.astro"
const { title, postDate, urlParam, description, cardHeight, cardWidth, bgColor, postTags} = Astro.props
---
<html>
    <div class="playlist-item">
        <div class="playlist-header" id="playlist-header">
            <a href={urlParam} ><p class="playlist-title"><strong>{title}</strong></p></a>
            
            
        </div>
        {description && (<p class="playlist-item-descr">{description}</p>)}
        <div class="tags-n-date">
            <p class="postDate">{postDate != null ? (<FormattedDate date={postDate}/>) : null}</p>
         </div>
    </div>

</html>



<style lang="scss" define:vars={{cardHeight, cardWidth, bgColor}}>
    .playlist-item {
        height: auto;
        height: var(--cardHeight);
        border-radius: .5rem;
        background: inherit;
        padding: 0 .5rem 0 .5rem;
        position: relative;
        
        
        .playlist-header {
            display: flex;
            flex-direction: column;
            margin-bottom: -.5rem;
        }  
    }
    .playlist-title {
                
                font-size: medium;
                padding-bottom: 1%;
                background: linear-gradient(#000 0 0);
                display: inline-block;
                background-position: 0 100%; /*OR bottom left*/
                background-size: 0% 2px;
                background-repeat: no-repeat;
                transition: background-size 0.3s, background-position 0s 0.3s;
 
                &:hover {
                    background-position: 100% 100%; /*OR bottom right*/
                    background-size: 100% 2px;
                }
            }
    a {
       text-decoration: none; 
       color: inherit;
       width: fit-content;
       
    }
    .tags-n-date {
        display: relative;
        font-size: small;
        position: absolute;
        bottom: -3%;
        right: 1%;
        
        .postDate {
            border-radius: .3rem;
            border: 1px solid rgba(orange, 0.5);
            padding: 0 .1rem 0 .1rem
        }
    }
    
    .playlist-item-descr {
        font-size: medium;
    
    }
    @media screen and (max-width: 600px){
        a {
            font-size: 1.563rem;
            
        }
        .playlist-title {
            font-size: 1rem;
        }
        .playlist-item-descr {
            font-size: small;
        }
    }
    .dark {
        .playlist-title {
                
                font-size: medium;
                
                padding-bottom: 1%;
                background: linear-gradient(#ffffff 0 0);
                display: inline-block;
                background-position: 0 100%; /*OR bottom left*/
                background-size: 0% 2px;
                background-repeat: no-repeat;
                transition: background-size 0.3s, background-position 0s 0.3s;
 
                &:hover {
                    background-position: 100% 100%; /*OR bottom right*/
                    background-size: 100% 2px;
                }
            }
        
    }
</style>